#maxint=2000.
#const numRooms=2.
#const numDoors=1.
#const numAreas=5.
#const numFloors=1.
#const numBuildings=1.
#const numObjects=0.
#const numPersons=1.
#const numRobots=0.
#const n=3.
#const numTables=0.
#const numSurfaces=4.
#const numBlocks=3.
#const numSteps=6.
is_subclass(real_class,entity_class).
is_subclass(abstract_class,entity_class).
is_subclass(animate_class,real_class).
is_subclass(person_class,animate_class).
is_subclass(controllable_class,animate_class).
is_subclass(robot_class,controllable_class).
is_subclass(inanimate_class,real_class).
is_subclass(object_class,inanimate_class).
is_subclass(location_class,abstract_class).
is_subclass(building_class,location_class).
is_subclass(floor_class,building_class).
is_subclass(door_class,floor_class).
is_subclass(room_class,floor_class).
is_subclass(area_class,room_class).
is_a(A1_G,area_class):-area(A1_G),entity(A1_G).
is_a(R1_G,room_class):-room(R1_G),entity(R1_G).
is_a(D1_G,door_class):-door(D1_G),entity(D1_G).
is_a(F1_G,floor_class):-floor(F1_G),entity(F1_G).
is_a(B1_G,building_class):-building(B1_G),entity(B1_G).
-is_subclass(C1_G,C2_G):-not  is_subclass(C1_G,C2_G),class(C1_G),class(C2_G).
siblings(C1_G,C2_G):-is_subclass(C1_G,C3_G),is_subclass(C2_G,C3_G),C1_G!=C2_G,C1_G!=C3_G,C2_G!=C3_G,class(C3_G),class(C1_G),class(C2_G).
-siblings(C1_G,C2_G):-not  siblings(C1_G,C2_G),class(C2_G),class(C1_G).
belongs_to(L1_G,L3_G):-belongs_to(L1_G,L2_G),belongs_to(L2_G,L3_G),is_subclass(C2_G,C3_G),is_a(L2_G,C2_G),is_a(L3_G,C3_G),L1_G!=L2_G,L1_G!=L3_G,L3_G!=L2_G,class(C3_G),class(C2_G),location(L1_G),location(L3_G),location(L2_G),entity(L2_G),entity(L3_G).
-belongs_to(L1_G,L2_G):-not  belongs_to(L1_G,L2_G),location(L2_G),location(L1_G).
-holds(F_G,I_G):-defined_fluent(F_G),not  holds(F_G,I_G),step(I_G),fluent(F_G).
holds(F_G,VAR_0):-inertial_fluent(F_G),holds(F_G,I_G),not  -holds(F_G,VAR_1),VAR_0=I_G+1,VAR_1=I_G+1,step(I_G),step(VAR_1),step(VAR_0),fluent(F_G).
-holds(F_G,VAR_0):-inertial_fluent(F_G),-holds(F_G,I_G),not  holds(F_G,VAR_1),VAR_0=I_G+1,VAR_1=I_G+1,fluent(F_G),step(I_G),step(VAR_1),step(VAR_0).
-occurs(AC_G,I_G):-not  occurs(AC_G,I_G),action(AC_G),step(I_G).
holds(has_location(R_G,L2_G),VAR_0):-occurs(travel(R_G,L2_G),I_G),robot(R_G),VAR_0=I_G+1,fluent(has_location(R_G,L2_G)),step(VAR_0),action(travel(R_G,L2_G)),step(I_G).
-holds(has_location(R_G,L3_G),VAR_0):-occurs(travel(R_G,L2_G),I_G),holds(has_location(R_G,L1_G),I_G),L1_G!=L2_G,is_a(L1_G,C1_G),is_a(L2_G,C2_G),siblings(C1_G,C2_G),holds(has_location(R_G,L3_G),I_G),belongs_to(L3_G,L1_G),VAR_0=I_G+1,class(C2_G),location(L3_G),fluent(has_location(R_G,L1_G)),step(I_G),class(C1_G),step(VAR_0),fluent(has_location(R_G,L3_G)),location(L1_G),entity(L2_G),entity(L1_G),action(travel(R_G,L2_G)).
-holds(has_location(O_G,L3_G),VAR_0):-occurs(travel(R_G,L2_G),I_G),holds(has_location(R_G,L1_G),I_G),L1_G!=L2_G,is_a(L1_G,C1_G),is_a(L2_G,C2_G),siblings(C1_G,C2_G),holds(has_location(R_G,L3_G),I_G),belongs_to(L3_G,L1_G),holds(has_object(R_G,O_G),I_G),VAR_0=I_G+1,action(travel(R_G,L2_G)),entity(L2_G),class(C1_G),location(L1_G),class(C2_G),fluent(has_location(R_G,L3_G)),fluent(has_location(R_G,L1_G)),step(VAR_0),step(I_G),location(L3_G),fluent(has_object(R_G,O_G)),fluent(has_location(O_G,L3_G)),entity(L1_G).
holds(has_object(R_G,O_G),VAR_0):-occurs(pick_up(R_G,O_G),I_G),robot(R_G),VAR_0=I_G+1,step(VAR_0),action(pick_up(R_G,O_G)),step(I_G),fluent(has_object(R_G,O_G)).
-holds(on(O1_G,S2_G),VAR_0):-occurs(pick_up(R_G,O1_G),I_G),holds(on(O1_G,S2_G),I_G),robot(R_G),has_surface(O2_G,S2_G),VAR_0=I_G+1,step(I_G),action(pick_up(R_G,O1_G)),step(VAR_0),fluent(on(O1_G,S2_G)),real(O2_G),surface(S2_G).
-holds(has_object(R_G,O_G),VAR_0):-occurs(put_down(R_G,O_G,L_G),I_G),robot(R_G),VAR_0=I_G+1,step(VAR_0),step(I_G),fluent(has_object(R_G,O_G)),action(put_down(R_G,O_G,L_G)).
holds(on(O1_G,S2_G),VAR_0):-occurs(put_down(R_G,O1_G,S2_G),I_G),holds(has_location(R_G,L_G),I_G),holds(has_location(O2_G,L_G),I_G),has_surface(O2_G,S2_G),robot(R_G),VAR_0=I_G+1,step(I_G),real(O2_G),action(put_down(R_G,O1_G,S2_G)),fluent(has_location(O2_G,L_G)),surface(S2_G),fluent(has_location(R_G,L_G)),fluent(on(O1_G,S2_G)),step(VAR_0).
holds(is_open(D_G),VAR_0):-occurs(open_door(R_G,D_G),I_G),VAR_0=I_G+1,step(VAR_0),step(I_G),action(open_door(R_G,D_G)),fluent(is_open(D_G)).
holds(has_location(Th_G,L2_G),I_G):-holds(has_location(Th_G,L1_G),I_G),belongs_to(L1_G,L2_G),L1_G!=L2_G,step(I_G),fluent(has_location(Th_G,L1_G)),location(L1_G),fluent(has_location(Th_G,L2_G)),location(L2_G).
-holds(has_location(Th_G,L1_G),I_G):-holds(has_location(Th_G,L2_G),I_G),siblings(C1_G,C2_G),L1_G!=L2_G,is_a(L1_G,C1_G),is_a(L2_G,C2_G),class(C1_G),class(C2_G),entity(L2_G),step(I_G),fluent(has_location(Th_G,L2_G)),entity(L1_G),fluent(has_location(Th_G,L1_G)).
-holds(has_location(Th_G,L1_G),I_G):-holds(has_location(Th_G,L2_G),I_G),L1_G!=L2_G,is_a(L1_G,C1_G),is_a(L2_G,C2_G),C1_G=C2_G,fluent(has_location(Th_G,L1_G)),class(C1_G),step(I_G),class(C2_G),fluent(has_location(Th_G,L2_G)),entity(L1_G),entity(L2_G).
holds(has_location(O_G,L_G),I_G):-holds(has_location(A_G,L_G),I_G),holds(has_object(A_G,O_G),I_G),fluent(has_location(O_G,L_G)),fluent(has_object(A_G,O_G)),step(I_G),fluent(has_location(A_G,L_G)).
is_connected(A1_G,A2_G):-belongs_to(A1_G,R_G),belongs_to(A2_G,R_G),area(A1_G),area(A2_G),room(R_G),A1_G!=A2_G,location(R_G),location(A1_G),location(A2_G).
is_connected(R1_G,R2_G):-is_connected(D1_G,R1_G),is_connected(D1_G,R2_G),door(D1_G),room(R1_G),room(R2_G),R1_G!=R2_G,location(R2_G),location(R1_G),location(D1_G).
-is_connected(L1_G,L2_G):-not  is_connected(L1_G,L2_G),location(L1_G),location(L2_G).
is_connected(L1_G,L2_G):-is_connected(L2_G,L1_G),L1_G!=L2_G,location(L2_G),location(L1_G).
holds(can_move_to(R_G,A2_G),I_G):-is_connected(A1_G,A2_G),A1_G!=A2_G,area(A1_G),area(A2_G),holds(has_location(R_G,A1_G),I_G),step(I_G),location(A1_G),fluent(has_location(R_G,A1_G)),location(A2_G),fluent(can_move_to(R_G,A2_G)).
holds(can_move_to(R_G,R2_G),I_G):-is_connected(R1_G,R2_G),holds(is_open(D_G),I_G),R1_G!=R2_G,room(R1_G),room(R2_G),holds(has_location(R_G,R1_G),I_G),step(I_G),fluent(can_move_to(R_G,R2_G)),location(R2_G),location(R1_G),fluent(is_open(D_G)),fluent(has_location(R_G,R1_G)).
holds(can_move_to(R_G,D2_G),I_G):-is_connected(D1_G,R1_G),is_connected(D2_G,R1_G),door(D2_G),door(D1_G),room(R1_G),D1_G!=D2_G,holds(has_location(R_G,D1_G),I_G),holds(is_open(D1_G),I_G),fluent(can_move_to(R_G,D2_G)),location(D2_G),location(R1_G),location(D1_G),step(I_G),fluent(is_open(D1_G)),fluent(has_location(R_G,D1_G)).
holds(can_move_to(R_G,D1_G),I_G):-belongs_to(A1_G,R1_G),is_connected(D1_G,R1_G),door(D1_G),room(R1_G),area(A1_G),holds(has_location(R_G,A1_G),I_G),step(I_G),location(R1_G),location(A1_G),location(D1_G),fluent(can_move_to(R_G,D1_G)),fluent(has_location(R_G,A1_G)).
holds(can_move_to(R_G,D1_G),I_G):-is_connected(D1_G,R1_G),door(D1_G),room(R1_G),holds(has_location(R_G,R1_G),I_G),fluent(has_location(R_G,R1_G)),step(I_G),location(R1_G),fluent(can_move_to(R_G,D1_G)),location(D1_G).
holds(can_move_to(R_G,A1_G),I_G):-belongs_to(A1_G,R1_G),is_connected(D1_G,R1_G),door(D1_G),room(R1_G),area(A1_G),holds(has_location(R_G,D1_G),I_G),holds(is_open(D1_G),I_G),location(R1_G),step(I_G),fluent(can_move_to(R_G,A1_G)),fluent(has_location(R_G,D1_G)),fluent(is_open(D1_G)),location(A1_G),location(D1_G).
holds(can_move_to(R_G,R1_G),I_G):-is_connected(D1_G,R1_G),door(D1_G),room(R1_G),holds(has_location(R_G,D1_G),I_G),holds(is_open(D1_G),I_G),step(I_G),fluent(can_move_to(R_G,R1_G)),location(R1_G),location(D1_G),fluent(has_location(R_G,D1_G)),fluent(is_open(D1_G)).
holds(can_move_to(R_G,A1_G),I_G):-belongs_to(A1_G,R2_G),holds(has_location(R_G,R2_G),I_G),room(R2_G),area(A1_G),location(A1_G),fluent(has_location(R_G,R2_G)),fluent(can_move_to(R_G,A1_G)),step(I_G),location(R2_G).
-holds(has_state(R_G,S1_G),I_G):-holds(has_state(R_G,S2_G),I_G),S1_G!=S2_G,step(I_G),fluent(has_state(R_G,S1_G)),fluent(has_state(R_G,S2_G)).
holds(has_location(O1_G,L1_G),I_G):-holds(on(O1_G,S2_G),I_G),holds(has_location(O2_G,L1_G),I_G),has_surface(O2_G,S2_G),O1_G!=O2_G,real(O2_G),step(I_G),fluent(on(O1_G,S2_G)),surface(S2_G),fluent(has_location(O2_G,L1_G)),fluent(has_location(O1_G,L1_G)).
holds(is_above(O1_G,O3_G),I_G):-holds(on(O1_G,S2_G),I_G),holds(on(O2_G,O3_G),I_G),has_surface(O2_G,S2_G),O1_G!=O2_G,O2_G!=O3_G,O1_G!=O3_G,step(I_G),fluent(on(O2_G,O3_G)),real(O2_G),surface(S2_G),fluent(is_above(O1_G,O3_G)),fluent(on(O1_G,S2_G)).
holds(is_above(O1_G,O3_G),I_G):-holds(is_above(O1_G,O2_G),I_G),holds(is_above(O2_G,O3_G),I_G),O1_G!=O2_G,O2_G!=O3_G,O1_G!=O3_G,step(I_G),fluent(is_above(O1_G,O2_G)),fluent(is_above(O2_G,O3_G)),fluent(is_above(O1_G,O3_G)).
-holds(on(O1_G,S2_G),I_G):-has_surface(O2_G,S2_G),O1_G=O2_G,step(I_G),surface(S2_G),real(O2_G),fluent(on(O1_G,S2_G)).
-holds(is_above(O1_G,O2_G),I_G):-O1_G=O2_G,step(I_G),fluent(is_above(O1_G,O2_G)).
-has_surface(O2_G,S1_G):-has_surface(O1_G,S1_G),O1_G!=O2_G,real(O1_G),real(O2_G),surface(S1_G).
-occurs(travel(R_G,L_G),I_G):-holds(has_location(R_G,L_G),I_G),area(L_G),action(travel(R_G,L_G)),step(I_G),fluent(has_location(R_G,L_G)).
-occurs(pick_up(R_G,O_G),I_G):-holds(has_location(R_G,L1_G),I_G),holds(has_location(O_G,L2_G),I_G),L1_G!=L2_G,area(L1_G),area(L2_G),step(I_G),action(pick_up(R_G,O_G)),fluent(has_location(O_G,L2_G)),fluent(has_location(R_G,L1_G)).
-occurs(pick_up(R_G,O_G),I_G):-holds(has_object(R_G,O_G),I_G),robot(R_G),fluent(has_object(R_G,O_G)),step(I_G),action(pick_up(R_G,O_G)).
-occurs(put_down(R_G,O_G,L_G),I_G):-not  holds(has_object(R_G,O_G),I_G),fluent(has_object(R_G,O_G)),step(I_G),action(put_down(R_G,O_G,L_G)).
-occurs(open_door(R_G,D_G),I_G):--holds(has_location(R_G,D_G),I_G),fluent(has_location(R_G,D_G)),step(I_G),action(open_door(R_G,D_G)).
-occurs(open_door(R_G,D_G),I_G):-not  holds(has_location(R_G,D_G),I_G),step(I_G),action(open_door(R_G,D_G)),fluent(has_location(R_G,D_G)).
-occurs(open_door(R_G,D_G),I_G):-holds(is_open(D_G),I_G),step(I_G),fluent(is_open(D_G)),action(open_door(R_G,D_G)).
-occurs(travel(R_G,L2_G),I_G):--holds(can_move_to(R_G,L2_G),I_G),holds(has_location(R_G,L1_G),I_G),L1_G!=L2_G,fluent(has_location(R_G,L1_G)),step(I_G),action(travel(R_G,L2_G)),fluent(can_move_to(R_G,L2_G)).
-occurs(put_down(R_G,O_G,S_G),I_G):-has_surface(O2_G,S_G),holds(has_location(O2_G,L_G),I_G),-holds(has_location(R_G,L_G),I_G),robot(R_G),surface(S_G),fluent(has_location(O2_G,L_G)),step(I_G),fluent(has_location(R_G,L_G)),action(put_down(R_G,O_G,S_G)),real(O2_G).
-occurs(pick_up(R_G,O1_G),I_G):-holds(has_object(R_G,O2_G),I_G),robot(R_G),O1_G!=O2_G,fluent(has_object(R_G,O2_G)),step(I_G),action(pick_up(R_G,O1_G)).
-occurs(pick_up(R_G,O1_G),I_G):-holds(on(O2_G,S1_G),I_G),has_surface(O1_G,S1_G),surface(S1_G),fluent(on(O2_G,S1_G)),action(pick_up(R_G,O1_G)),step(I_G),real(O1_G).
belongs_to(a0,r1).
belongs_to(a1,r1).
belongs_to(a2,r1).
belongs_to(r1,f1).
belongs_to(f1,b1).
is_connected(d1,r1).
holds(has_location(rob0,a0),0).
holds(has_location(tab0,a0),0).
has_surface(tab0,s4).
has_size(block0,small).
has_colour(block0,blue).
has_shape(block0,cuboid).
has_surface(block0,s0).
holds(on(block0,s4),0).
has_size(block1,small).
has_colour(block1,red).
has_shape(block1,prism).
has_surface(block1,s1).
holds(on(block1,s4),0).
has_size(block2,small).
has_colour(block2,blue).
has_shape(block2,cube).
has_surface(block2,s2).
holds(on(block2,s0),0).
has_size(block3,small).
has_colour(block3,red).
has_shape(block3,cube).
has_surface(block3,s3).
holds(on(block3,s4),0).
success:-goal(I_G),step(I_G).
:-not  success.
:-occurs(A1_G,I_G),occurs(A2_G,I_G),A1_G!=A2_G,step(I_G),action(A1_G),action(A2_G).
something_happened(I_G):-occurs(A_G,I_G),step(I_G),action(A_G).
occurs(A_G,I_G)|-occurs(A_G,I_G):-not  goal(I_G),agent_action(A_G),step(I_G),action(A_G).
:-step(I_G),not  something_happened(I_G),something_happened(VAR_0),VAR_0=I_G+1,step(VAR_0).
goal(I_G):-holds(on(block0,s2),I_G),holds(on(block1,s3),I_G),holds(on(block2,s1),I_G),holds(on(block3,s4),I_G),step(I_G).
area(a0).
area(a1).
area(a2).
area(a3).
area(a4).
area(a5).
entity(s0).
entity(rob0).
entity(s2).
entity(block0).
entity(s1).
entity(block1).
entity(block2).
entity(block3).
entity(p1).
entity(a0).
entity(p0).
entity(d1).
entity(b0).
entity(b1).
entity(a1).
entity(a2).
entity(f1).
entity(a3).
entity(a4).
entity(r1).
entity(f0).
entity(a5).
entity(s3).
entity(tab0).
entity(s4).
room(r1).
door(d1).
floor(f1).
floor(f0).
building(b0).
building(b1).
class(abstract_class).
class(inanimate_class).
class(room_class).
class(real_class).
class(object_class).
class(building_class).
class(person_class).
class(robot_class).
class(floor_class).
class(area_class).
class(animate_class).
class(location_class).
class(door_class).
class(controllable_class).
class(entity_class).
location(s0).
location(d1).
location(s2).
location(s1).
location(a0).
location(b0).
location(b1).
location(a1).
location(a2).
location(a3).
location(f1).
location(a4).
location(r1).
location(f0).
location(a5).
location(s3).
location(s4).
step(3).
step(2).
step(1).
step(0).
step(6).
step(5).
step(4).
defined_fluent(is_above(block1,block1)).
defined_fluent(is_above(block1,block3)).
defined_fluent(is_above(block3,p1)).
defined_fluent(is_above(p1,p1)).
defined_fluent(can_move_to(rob0,a2)).
defined_fluent(is_above(tab0,block1)).
defined_fluent(can_move_to(p0,a5)).
defined_fluent(is_above(block2,block1)).
defined_fluent(can_move_to(rob0,s2)).
defined_fluent(can_move_to(p1,s3)).
defined_fluent(is_above(block2,rob0)).
defined_fluent(is_above(rob0,block0)).
defined_fluent(is_above(block2,tab0)).
defined_fluent(can_move_to(p1,d1)).
defined_fluent(is_above(p1,block2)).
defined_fluent(can_move_to(p0,r1)).
defined_fluent(can_move_to(rob0,s1)).
defined_fluent(can_move_to(p0,a4)).
defined_fluent(is_above(block1,block2)).
defined_fluent(is_above(p1,p0)).
defined_fluent(can_move_to(rob0,a1)).
defined_fluent(is_above(tab0,block2)).
defined_fluent(is_above(block1,p0)).
defined_fluent(is_above(block2,block2)).
defined_fluent(can_move_to(p1,s4)).
defined_fluent(can_move_to(p0,s0)).
defined_fluent(is_above(rob0,block1)).
defined_fluent(is_above(p1,block1)).
defined_fluent(can_move_to(rob0,a0)).
defined_fluent(can_move_to(p0,b0)).
defined_fluent(can_move_to(p0,a3)).
defined_fluent(can_move_to(rob0,f0)).
defined_fluent(can_move_to(rob0,s0)).
defined_fluent(is_above(block3,block3)).
defined_fluent(is_above(tab0,p1)).
defined_fluent(is_above(p0,block3)).
defined_fluent(is_above(block0,block3)).
defined_fluent(is_above(tab0,rob0)).
defined_fluent(can_move_to(p1,a0)).
defined_fluent(is_above(block3,rob0)).
defined_fluent(can_move_to(p1,s1)).
defined_fluent(can_move_to(p1,s0)).
defined_fluent(is_above(rob0,block2)).
defined_fluent(can_move_to(rob0,d1)).
defined_fluent(is_above(p1,block0)).
defined_fluent(can_move_to(rob0,b1)).
defined_fluent(is_above(block0,rob0)).
defined_fluent(is_above(block2,p0)).
defined_fluent(can_move_to(p0,b1)).
defined_fluent(is_above(block3,tab0)).
defined_fluent(can_move_to(rob0,f1)).
defined_fluent(is_above(block1,block0)).
defined_fluent(can_move_to(p0,a2)).
defined_fluent(is_above(tab0,p0)).
defined_fluent(is_above(p0,tab0)).
defined_fluent(is_above(block2,block0)).
defined_fluent(is_above(tab0,block0)).
defined_fluent(is_above(rob0,rob0)).
defined_fluent(can_move_to(p1,a1)).
defined_fluent(can_move_to(p1,s2)).
defined_fluent(is_above(rob0,block3)).
defined_fluent(is_above(rob0,tab0)).
defined_fluent(can_move_to(p0,d1)).
defined_fluent(is_above(p0,block1)).
defined_fluent(is_above(block2,p1)).
defined_fluent(can_move_to(p0,f0)).
defined_fluent(can_move_to(p1,f1)).
defined_fluent(is_above(block0,block1)).
defined_fluent(can_move_to(p0,a1)).
defined_fluent(is_above(p1,rob0)).
defined_fluent(can_move_to(p1,a2)).
defined_fluent(is_above(block3,block2)).
defined_fluent(can_move_to(p0,s3)).
defined_fluent(is_above(block3,block0)).
defined_fluent(is_above(p0,block2)).
defined_fluent(can_move_to(rob0,a5)).
defined_fluent(can_move_to(rob0,b0)).
defined_fluent(is_above(block0,block2)).
defined_fluent(is_above(block1,tab0)).
defined_fluent(is_above(block1,rob0)).
defined_fluent(is_above(block0,tab0)).
defined_fluent(can_move_to(p1,a3)).
defined_fluent(is_above(rob0,p0)).
defined_fluent(can_move_to(p0,a0)).
defined_fluent(can_move_to(p0,s4)).
defined_fluent(is_above(block3,block1)).
defined_fluent(can_move_to(rob0,a4)).
defined_fluent(can_move_to(p1,r1)).
defined_fluent(can_move_to(p1,b0)).
defined_fluent(can_move_to(rob0,s4)).
defined_fluent(is_above(tab0,block3)).
defined_fluent(is_above(rob0,p1)).
defined_fluent(is_above(block1,p1)).
defined_fluent(is_above(block2,block3)).
defined_fluent(is_above(p0,p0)).
defined_fluent(is_above(block3,p0)).
defined_fluent(is_above(p0,rob0)).
defined_fluent(can_move_to(p1,a4)).
defined_fluent(is_above(tab0,tab0)).
defined_fluent(can_move_to(p0,s1)).
defined_fluent(can_move_to(rob0,a3)).
defined_fluent(is_above(block0,p0)).
defined_fluent(is_above(p0,block0)).
defined_fluent(can_move_to(p1,b1)).
defined_fluent(can_move_to(p1,f0)).
defined_fluent(is_above(p1,block3)).
defined_fluent(is_above(block0,block0)).
defined_fluent(can_move_to(rob0,s3)).
defined_fluent(can_move_to(p0,f1)).
defined_fluent(is_above(p1,tab0)).
defined_fluent(is_above(block0,p1)).
defined_fluent(can_move_to(rob0,r1)).
defined_fluent(is_above(p0,p1)).
defined_fluent(can_move_to(p0,s2)).
defined_fluent(can_move_to(p1,a5)).
fluent(is_above(block1,block1)).
fluent(is_above(block1,block3)).
fluent(has_location(p0,s3)).
fluent(has_location(block1,s4)).
fluent(can_move_to(rob0,a2)).
fluent(is_above(tab0,block1)).
fluent(has_location(block3,a3)).
fluent(on(p0,s4)).
fluent(has_location(block3,a2)).
fluent(has_location(p0,a2)).
fluent(has_location(block2,f1)).
fluent(has_location(p1,a2)).
fluent(has_state(block3,closed)).
fluent(is_above(block1,block2)).
fluent(can_move_to(rob0,a1)).
fluent(has_location(block1,s3)).
fluent(has_location(p0,s4)).
fluent(is_above(tab0,block2)).
fluent(on(p0,s3)).
fluent(has_location(block2,b1)).
fluent(is_above(block1,p0)).
fluent(has_object(p1,tab0)).
fluent(has_location(block3,a1)).
fluent(has_location(rob0,s0)).
fluent(can_move_to(p0,s0)).
fluent(has_location(p0,a3)).
fluent(has_location(block3,s0)).
fluent(has_location(p1,a3)).
fluent(has_location(block3,r1)).
fluent(can_move_to(rob0,a0)).
fluent(is_above(block3,block3)).
fluent(has_location(p0,s1)).
fluent(has_location(block3,a5)).
fluent(has_location(block1,a1)).
fluent(is_above(p0,block3)).
fluent(has_location(block3,d1)).
fluent(has_location(p0,r1)).
fluent(has_location(block2,b0)).
fluent(is_above(block0,block3)).
fluent(is_above(tab0,rob0)).
fluent(can_move_to(p1,a0)).
fluent(can_move_to(p1,s0)).
fluent(has_location(p0,a4)).
fluent(has_state(p1,open)).
fluent(has_location(rob0,s1)).
fluent(has_location(block1,a0)).
fluent(can_move_to(rob0,d1)).
fluent(has_location(p1,a4)).
fluent(is_above(block0,rob0)).
fluent(has_location(block1,s2)).
fluent(is_above(block1,block0)).
fluent(has_location(p0,s2)).
fluent(is_above(p0,tab0)).
fluent(has_location(block3,a4)).
fluent(is_above(tab0,block0)).
fluent(has_state(block2,open)).
fluent(is_above(rob0,rob0)).
fluent(can_move_to(p1,a1)).
fluent(has_state(p1,closed)).
fluent(is_above(rob0,tab0)).
fluent(has_location(rob0,s2)).
fluent(has_state(block1,closed)).
fluent(has_location(block2,f0)).
fluent(has_location(block1,s1)).
fluent(has_location(p1,a5)).
fluent(has_location(p0,a5)).
fluent(on(rob0,s3)).
fluent(on(tab0,s0)).
fluent(on(block2,s2)).
fluent(is_above(p0,block1)).
fluent(on(p0,s0)).
fluent(has_location(block1,s0)).
fluent(can_move_to(p0,f0)).
fluent(has_location(rob0,s3)).
fluent(is_open(d1)).
fluent(can_move_to(p0,a1)).
fluent(is_above(p1,rob0)).
fluent(has_location(tab0,a2)).
fluent(has_location(block1,f1)).
fluent(can_move_to(p1,a2)).
fluent(on(p1,s0)).
fluent(has_location(block3,s3)).
fluent(can_move_to(p0,s3)).
fluent(has_location(p0,f0)).
fluent(on(block2,s1)).
fluent(on(rob0,s4)).
fluent(is_above(p0,block2)).
fluent(can_move_to(rob0,a5)).
fluent(has_location(block1,b1)).
fluent(has_location(rob0,a5)).
fluent(can_move_to(rob0,b0)).
fluent(is_above(block1,tab0)).
fluent(is_above(block1,rob0)).
fluent(has_location(rob0,s4)).
fluent(can_move_to(p1,a3)).
fluent(has_location(block3,s4)).
fluent(has_location(tab0,a3)).
fluent(can_move_to(p0,a0)).
fluent(can_move_to(p0,s4)).
fluent(on(p0,s2)).
fluent(on(block2,s0)).
fluent(on(block0,s3)).
fluent(has_location(rob0,a4)).
fluent(has_location(block1,b0)).
fluent(can_move_to(rob0,a4)).
fluent(has_location(tab0,r1)).
fluent(can_move_to(p1,b0)).
fluent(has_location(tab0,b0)).
fluent(can_move_to(rob0,s4)).
fluent(is_above(block2,block3)).
fluent(has_object(rob0,block0)).
fluent(has_location(p0,b0)).
fluent(has_location(p1,d1)).
fluent(has_location(tab0,a4)).
fluent(has_location(block0,s0)).
fluent(is_above(block3,p0)).
fluent(is_above(tab0,tab0)).
fluent(can_move_to(p1,a4)).
fluent(on(p1,s2)).
fluent(has_location(block3,s1)).
fluent(has_location(p0,a0)).
fluent(has_state(p0,open)).
fluent(has_state(rob0,closed)).
fluent(can_move_to(p0,s1)).
fluent(has_location(rob0,r1)).
fluent(has_location(block1,r1)).
fluent(on(block0,s4)).
fluent(can_move_to(rob0,a3)).
fluent(is_above(block0,p0)).
fluent(has_location(tab0,d1)).
fluent(is_above(p0,block0)).
fluent(on(p0,s1)).
fluent(can_move_to(p1,b1)).
fluent(has_location(rob0,a3)).
fluent(has_object(rob0,block1)).
fluent(has_location(p0,b1)).
fluent(can_move_to(rob0,s3)).
fluent(can_move_to(p0,f1)).
fluent(is_above(block0,p1)).
fluent(is_above(p1,tab0)).
fluent(can_move_to(rob0,r1)).
fluent(has_location(block2,s0)).
fluent(has_state(block2,closed)).
fluent(has_location(p0,f1)).
fluent(has_location(p0,a1)).
fluent(has_location(tab0,a5)).
fluent(can_move_to(p0,s2)).
fluent(has_location(tab0,b1)).
fluent(has_location(block1,f0)).
fluent(can_move_to(p1,a5)).
fluent(on(p1,s1)).
fluent(has_location(block3,s2)).
fluent(has_location(block0,d1)).
fluent(has_location(block3,f0)).
fluent(has_location(block0,a2)).
fluent(on(block1,s1)).
fluent(is_above(p1,p1)).
fluent(is_above(block3,p1)).
fluent(has_location(block2,s1)).
fluent(on(block3,s2)).
fluent(has_location(rob0,d1)).
fluent(on(p1,s4)).
fluent(is_above(block2,block1)).
fluent(can_move_to(p0,a5)).
fluent(can_move_to(rob0,s2)).
fluent(has_location(block1,a4)).
fluent(has_object(p0,block1)).
fluent(has_location(block0,s3)).
fluent(is_above(block2,rob0)).
fluent(can_move_to(p1,s3)).
fluent(has_location(tab0,s4)).
fluent(is_above(rob0,block0)).
fluent(has_location(rob0,a1)).
fluent(is_above(block2,tab0)).
fluent(on(block0,s1)).
fluent(on(tab0,s4)).
fluent(can_move_to(p1,d1)).
fluent(has_location(rob0,b1)).
fluent(has_location(tab0,f0)).
fluent(is_above(p1,block2)).
fluent(has_location(p1,s3)).
fluent(can_move_to(p0,r1)).
fluent(can_move_to(rob0,s1)).
fluent(has_location(block0,a3)).
fluent(can_move_to(p0,a4)).
fluent(is_above(p1,p0)).
fluent(has_location(block2,d1)).
fluent(on(block1,s2)).
fluent(has_location(block1,a5)).
fluent(has_location(block2,s2)).
fluent(on(block3,s1)).
fluent(is_above(block2,block2)).
fluent(on(p1,s3)).
fluent(can_move_to(p1,s4)).
fluent(has_object(p0,block2)).
fluent(has_location(block0,s4)).
fluent(has_location(block2,a0)).
fluent(has_location(tab0,s3)).
fluent(is_above(rob0,block1)).
fluent(has_location(block3,b1)).
fluent(has_location(rob0,a2)).
fluent(on(rob0,s0)).
fluent(on(tab0,s3)).
fluent(on(block0,s2)).
fluent(has_location(p1,s4)).
fluent(is_above(p1,block1)).
fluent(has_location(tab0,f1)).
fluent(has_location(tab0,a1)).
fluent(can_move_to(p0,b0)).
fluent(has_location(block0,a4)).
fluent(can_move_to(rob0,f0)).
fluent(can_move_to(p0,a3)).
fluent(can_move_to(rob0,s0)).
fluent(has_location(block1,a2)).
fluent(has_location(block0,s1)).
fluent(is_above(tab0,p1)).
fluent(has_location(block2,s3)).
fluent(on(block3,s0)).
fluent(has_object(rob0,block3)).
fluent(has_state(tab0,open)).
fluent(is_above(block3,rob0)).
fluent(has_location(block3,b0)).
fluent(can_move_to(p1,s1)).
fluent(has_location(tab0,s2)).
fluent(has_object(p0,block3)).
fluent(is_above(rob0,block2)).
fluent(has_location(p1,r1)).
fluent(has_location(p1,s1)).
fluent(on(rob0,s1)).
fluent(is_above(p1,block0)).
fluent(has_location(block0,r1)).
fluent(can_move_to(rob0,b1)).
fluent(on(tab0,s2)).
fluent(is_above(block2,p0)).
fluent(has_location(block0,a5)).
fluent(can_move_to(p0,b1)).
fluent(is_above(block3,tab0)).
fluent(can_move_to(rob0,f1)).
fluent(has_location(tab0,a0)).
fluent(has_object(rob0,tab0)).
fluent(can_move_to(p0,a2)).
fluent(on(block1,s0)).
fluent(has_location(rob0,f1)).
fluent(is_above(tab0,p0)).
fluent(has_location(block3,f1)).
fluent(has_location(block1,a3)).
fluent(is_above(block2,block0)).
fluent(has_state(tab0,closed)).
fluent(has_object(p1,block0)).
fluent(has_object(rob0,block2)).
fluent(has_location(block2,s4)).
fluent(has_location(rob0,a0)).
fluent(can_move_to(p1,s2)).
fluent(is_above(rob0,block3)).
fluent(has_location(block0,s2)).
fluent(on(block0,s0)).
fluent(has_state(p0,closed)).
fluent(has_location(p1,s2)).
fluent(can_move_to(p0,d1)).
fluent(on(rob0,s2)).
fluent(has_location(tab0,s1)).
fluent(on(tab0,s1)).
fluent(on(block2,s3)).
fluent(has_location(block2,r1)).
fluent(has_location(block2,a4)).
fluent(has_object(p1,block1)).
fluent(has_state(rob0,open)).
fluent(has_location(block0,f1)).
fluent(is_above(block2,p1)).
fluent(has_location(rob0,f0)).
fluent(has_location(tab0,s0)).
fluent(can_move_to(p1,f1)).
fluent(is_above(block0,block1)).
fluent(has_location(block1,d1)).
fluent(is_above(block3,block2)).
fluent(has_state(block3,open)).
fluent(has_state(block1,open)).
fluent(on(block2,s4)).
fluent(is_above(block3,block0)).
fluent(has_object(p1,block2)).
fluent(has_location(block2,a5)).
fluent(has_object(p0,tab0)).
fluent(has_location(p1,f0)).
fluent(is_above(block0,block2)).
fluent(has_location(p1,s0)).
fluent(is_above(block0,tab0)).
fluent(has_location(p0,s0)).
fluent(is_above(rob0,p0)).
fluent(is_above(block3,block1)).
fluent(on(block3,s4)).
fluent(has_state(block0,closed)).
fluent(has_location(p1,a0)).
fluent(has_location(block2,a2)).
fluent(has_object(p1,block3)).
fluent(has_location(p1,f1)).
fluent(on(block1,s3)).
fluent(has_location(block3,a0)).
fluent(can_move_to(p1,r1)).
fluent(has_location(p1,b0)).
fluent(has_location(block0,a0)).
fluent(is_above(rob0,p1)).
fluent(is_above(tab0,block3)).
fluent(is_above(block1,p1)).
fluent(is_above(p0,p0)).
fluent(is_above(p0,rob0)).
fluent(has_location(block2,a1)).
fluent(has_location(block2,a3)).
fluent(has_location(block0,b1)).
fluent(has_location(p1,a1)).
fluent(on(block3,s3)).
fluent(has_location(block0,f0)).
fluent(on(block1,s4)).
fluent(has_state(block0,open)).
fluent(has_location(p1,b1)).
fluent(has_location(block0,a1)).
fluent(can_move_to(p1,f0)).
fluent(is_above(block0,block0)).
fluent(is_above(p1,block3)).
fluent(is_above(p0,p1)).
fluent(has_location(p0,d1)).
fluent(has_location(rob0,b0)).
fluent(has_object(p0,block0)).
fluent(has_location(block0,b0)).
inertial_fluent(has_location(p0,s3)).
inertial_fluent(has_location(block1,s4)).
inertial_fluent(has_location(block3,a3)).
inertial_fluent(on(p0,s4)).
inertial_fluent(has_location(block3,a2)).
inertial_fluent(has_location(p0,a2)).
inertial_fluent(has_location(block2,f1)).
inertial_fluent(has_location(p1,a2)).
inertial_fluent(has_state(block3,closed)).
inertial_fluent(has_location(block1,s3)).
inertial_fluent(has_location(p0,s4)).
inertial_fluent(has_location(block2,b1)).
inertial_fluent(on(p0,s3)).
inertial_fluent(has_location(rob0,s0)).
inertial_fluent(has_location(block3,a1)).
inertial_fluent(has_object(p1,tab0)).
inertial_fluent(has_location(p0,a3)).
inertial_fluent(has_location(block3,s0)).
inertial_fluent(has_location(p1,a3)).
inertial_fluent(has_location(block3,r1)).
inertial_fluent(has_location(p0,s1)).
inertial_fluent(has_location(block1,a1)).
inertial_fluent(has_location(block3,a5)).
inertial_fluent(has_location(block3,d1)).
inertial_fluent(has_location(p0,r1)).
inertial_fluent(has_location(block2,b0)).
inertial_fluent(has_location(p0,a4)).
inertial_fluent(has_state(p1,open)).
inertial_fluent(has_location(rob0,s1)).
inertial_fluent(has_location(block1,a0)).
inertial_fluent(has_location(p1,a4)).
inertial_fluent(has_location(block1,s2)).
inertial_fluent(has_location(p0,s2)).
inertial_fluent(has_location(block3,a4)).
inertial_fluent(has_state(block2,open)).
inertial_fluent(has_state(p1,closed)).
inertial_fluent(has_location(rob0,s2)).
inertial_fluent(has_state(block1,closed)).
inertial_fluent(has_location(block2,f0)).
inertial_fluent(has_location(block1,s1)).
inertial_fluent(has_location(p1,a5)).
inertial_fluent(has_location(p0,a5)).
inertial_fluent(on(rob0,s3)).
inertial_fluent(on(tab0,s0)).
inertial_fluent(on(block2,s2)).
inertial_fluent(on(p0,s0)).
inertial_fluent(has_location(block1,s0)).
inertial_fluent(has_location(rob0,s3)).
inertial_fluent(is_open(d1)).
inertial_fluent(has_location(block1,f1)).
inertial_fluent(has_location(tab0,a2)).
inertial_fluent(has_location(block3,s3)).
inertial_fluent(on(p1,s0)).
inertial_fluent(has_location(p0,f0)).
inertial_fluent(on(block2,s1)).
inertial_fluent(on(rob0,s4)).
inertial_fluent(has_location(rob0,a5)).
inertial_fluent(has_location(block1,b1)).
inertial_fluent(has_location(rob0,s4)).
inertial_fluent(has_location(block3,s4)).
inertial_fluent(has_location(tab0,a3)).
inertial_fluent(on(p0,s2)).
inertial_fluent(on(block2,s0)).
inertial_fluent(on(block0,s3)).
inertial_fluent(has_location(block1,b0)).
inertial_fluent(has_location(rob0,a4)).
inertial_fluent(has_location(tab0,r1)).
inertial_fluent(has_location(tab0,b0)).
inertial_fluent(has_location(p0,b0)).
inertial_fluent(has_object(rob0,block0)).
inertial_fluent(has_location(p1,d1)).
inertial_fluent(has_location(tab0,a4)).
inertial_fluent(has_location(block0,s0)).
inertial_fluent(has_location(block3,s1)).
inertial_fluent(on(p1,s2)).
inertial_fluent(has_state(rob0,closed)).
inertial_fluent(has_state(p0,open)).
inertial_fluent(has_location(p0,a0)).
inertial_fluent(has_location(rob0,r1)).
inertial_fluent(has_location(block1,r1)).
inertial_fluent(on(block0,s4)).
inertial_fluent(has_location(tab0,d1)).
inertial_fluent(on(p0,s1)).
inertial_fluent(has_location(rob0,a3)).
inertial_fluent(has_location(p0,b1)).
inertial_fluent(has_object(rob0,block1)).
inertial_fluent(has_state(block2,closed)).
inertial_fluent(has_location(block2,s0)).
inertial_fluent(has_location(p0,f1)).
inertial_fluent(has_location(tab0,a5)).
inertial_fluent(has_location(p0,a1)).
inertial_fluent(has_location(tab0,b1)).
inertial_fluent(has_location(block1,f0)).
inertial_fluent(has_location(block0,d1)).
inertial_fluent(has_location(block3,s2)).
inertial_fluent(on(p1,s1)).
inertial_fluent(has_location(block3,f0)).
inertial_fluent(has_location(block0,a2)).
inertial_fluent(on(block1,s1)).
inertial_fluent(has_location(block2,s1)).
inertial_fluent(on(block3,s2)).
inertial_fluent(has_location(rob0,d1)).
inertial_fluent(on(p1,s4)).
inertial_fluent(has_location(block1,a4)).
inertial_fluent(has_object(p0,block1)).
inertial_fluent(has_location(block0,s3)).
inertial_fluent(has_location(tab0,s4)).
inertial_fluent(has_location(rob0,a1)).
inertial_fluent(on(block0,s1)).
inertial_fluent(on(tab0,s4)).
inertial_fluent(has_location(rob0,b1)).
inertial_fluent(has_location(tab0,f0)).
inertial_fluent(has_location(p1,s3)).
inertial_fluent(has_location(block0,a3)).
inertial_fluent(has_location(block2,d1)).
inertial_fluent(on(block1,s2)).
inertial_fluent(has_location(block1,a5)).
inertial_fluent(has_location(block2,s2)).
inertial_fluent(on(block3,s1)).
inertial_fluent(on(p1,s3)).
inertial_fluent(has_object(p0,block2)).
inertial_fluent(has_location(block0,s4)).
inertial_fluent(has_location(block2,a0)).
inertial_fluent(has_location(tab0,s3)).
inertial_fluent(has_location(block3,b1)).
inertial_fluent(has_location(rob0,a2)).
inertial_fluent(on(rob0,s0)).
inertial_fluent(on(tab0,s3)).
inertial_fluent(on(block0,s2)).
inertial_fluent(has_location(p1,s4)).
inertial_fluent(has_location(tab0,f1)).
inertial_fluent(has_location(tab0,a1)).
inertial_fluent(has_location(block0,a4)).
inertial_fluent(has_location(block1,a2)).
inertial_fluent(has_location(block0,s1)).
inertial_fluent(has_location(block2,s3)).
inertial_fluent(on(block3,s0)).
inertial_fluent(has_object(rob0,block3)).
inertial_fluent(has_state(tab0,open)).
inertial_fluent(has_location(block3,b0)).
inertial_fluent(has_location(tab0,s2)).
inertial_fluent(has_object(p0,block3)).
inertial_fluent(has_location(p1,r1)).
inertial_fluent(has_location(p1,s1)).
inertial_fluent(on(rob0,s1)).
inertial_fluent(has_location(block0,r1)).
inertial_fluent(on(tab0,s2)).
inertial_fluent(has_location(block0,a5)).
inertial_fluent(has_location(tab0,a0)).
inertial_fluent(has_object(rob0,tab0)).
inertial_fluent(on(block1,s0)).
inertial_fluent(has_location(rob0,f1)).
inertial_fluent(has_location(block3,f1)).
inertial_fluent(has_location(block1,a3)).
inertial_fluent(has_state(tab0,closed)).
inertial_fluent(has_object(p1,block0)).
inertial_fluent(has_object(rob0,block2)).
inertial_fluent(has_location(block2,s4)).
inertial_fluent(has_location(rob0,a0)).
inertial_fluent(has_location(block0,s2)).
inertial_fluent(on(block0,s0)).
inertial_fluent(has_state(p0,closed)).
inertial_fluent(has_location(p1,s2)).
inertial_fluent(on(rob0,s2)).
inertial_fluent(has_location(tab0,s1)).
inertial_fluent(on(tab0,s1)).
inertial_fluent(on(block2,s3)).
inertial_fluent(has_location(block2,r1)).
inertial_fluent(has_location(block2,a4)).
inertial_fluent(has_object(p1,block1)).
inertial_fluent(has_state(rob0,open)).
inertial_fluent(has_location(block0,f1)).
inertial_fluent(has_location(rob0,f0)).
inertial_fluent(has_location(tab0,s0)).
inertial_fluent(has_location(block1,d1)).
inertial_fluent(has_state(block3,open)).
inertial_fluent(has_state(block1,open)).
inertial_fluent(on(block2,s4)).
inertial_fluent(has_object(p1,block2)).
inertial_fluent(has_location(block2,a5)).
inertial_fluent(has_object(p0,tab0)).
inertial_fluent(has_location(p1,f0)).
inertial_fluent(has_location(p1,s0)).
inertial_fluent(has_location(p0,s0)).
inertial_fluent(on(block3,s4)).
inertial_fluent(has_state(block0,closed)).
inertial_fluent(has_location(p1,a0)).
inertial_fluent(has_location(block2,a2)).
inertial_fluent(has_object(p1,block3)).
inertial_fluent(has_location(p1,f1)).
inertial_fluent(on(block1,s3)).
inertial_fluent(has_location(block3,a0)).
inertial_fluent(has_location(p1,b0)).
inertial_fluent(has_location(block0,a0)).
inertial_fluent(has_location(block2,a1)).
inertial_fluent(has_location(block0,b1)).
inertial_fluent(has_location(block2,a3)).
inertial_fluent(has_location(p1,a1)).
inertial_fluent(on(block3,s3)).
inertial_fluent(has_location(block0,f0)).
inertial_fluent(has_state(block0,open)).
inertial_fluent(on(block1,s4)).
inertial_fluent(has_location(p1,b1)).
inertial_fluent(has_location(block0,a1)).
inertial_fluent(has_location(p0,d1)).
inertial_fluent(has_location(rob0,b0)).
inertial_fluent(has_object(p0,block0)).
inertial_fluent(has_location(block0,b0)).
action(put_down(rob0,tab0,s1)).
action(pick_up(rob0,block1)).
action(put_down(rob0,tab0,s3)).
action(put_down(rob0,block3,s3)).
action(travel(rob0,a0)).
action(test).
action(pick_up(rob0,block3)).
action(travel(rob0,b0)).
action(put_down(rob0,block2,s2)).
action(put_down(rob0,block1,s1)).
action(travel(rob0,a4)).
action(put_down(rob0,block1,s3)).
action(travel(rob0,a2)).
action(travel(rob0,s1)).
action(put_down(rob0,block0,s1)).
action(put_down(rob0,block0,s4)).
action(travel(rob0,f0)).
action(put_down(rob0,block3,s1)).
action(travel(rob0,s4)).
action(put_down(rob0,block2,s4)).
action(open_door(rob0,d1)).
action(travel(rob0,s2)).
action(put_down(rob0,block2,s0)).
action(put_down(rob0,tab0,s4)).
action(put_down(rob0,block1,s0)).
action(pick_up(rob0,tab0)).
action(pick_up(rob0,block2)).
action(put_down(rob0,tab0,s2)).
action(put_down(rob0,block3,s4)).
action(put_down(rob0,block2,s1)).
action(travel(rob0,a1)).
action(put_down(rob0,block1,s2)).
action(travel(rob0,s0)).
action(travel(rob0,a3)).
action(put_down(rob0,block0,s0)).
action(put_down(rob0,block3,s2)).
action(travel(rob0,a5)).
action(travel(rob0,d1)).
action(travel(rob0,b1)).
action(put_down(rob0,block1,s4)).
action(put_down(rob0,tab0,s0)).
action(put_down(rob0,block0,s2)).
action(travel(rob0,f1)).
action(put_down(rob0,block3,s0)).
action(put_down(rob0,block0,s3)).
action(travel(rob0,r1)).
action(put_down(rob0,block2,s3)).
action(pick_up(rob0,block0)).
action(travel(rob0,s3)).
robot(rob0).
real(rob0).
real(block0).
real(block1).
real(block2).
real(block3).
real(p1).
real(p0).
real(tab0).
surface(s0).
surface(s2).
surface(s1).
surface(s3).
surface(s4).
agent_action(pick_up(rob0,block1)).
agent_action(put_down(rob0,tab0,s1)).
agent_action(put_down(rob0,tab0,s3)).
agent_action(put_down(rob0,block3,s3)).
agent_action(travel(rob0,a0)).
agent_action(put_down(rob0,block1,s1)).
agent_action(put_down(rob0,block2,s2)).
agent_action(travel(rob0,b0)).
agent_action(pick_up(rob0,block3)).
agent_action(travel(rob0,a4)).
agent_action(put_down(rob0,block1,s3)).
agent_action(travel(rob0,a2)).
agent_action(travel(rob0,s1)).
agent_action(put_down(rob0,block0,s1)).
agent_action(put_down(rob0,block0,s4)).
agent_action(travel(rob0,f0)).
agent_action(put_down(rob0,block3,s1)).
agent_action(travel(rob0,s4)).
agent_action(put_down(rob0,block2,s4)).
agent_action(open_door(rob0,d1)).
agent_action(travel(rob0,s2)).
agent_action(put_down(rob0,block2,s0)).
agent_action(put_down(rob0,block1,s0)).
agent_action(put_down(rob0,tab0,s4)).
agent_action(pick_up(rob0,tab0)).
agent_action(put_down(rob0,tab0,s2)).
agent_action(pick_up(rob0,block2)).
agent_action(put_down(rob0,block2,s1)).
agent_action(put_down(rob0,block3,s4)).
agent_action(travel(rob0,a1)).
agent_action(put_down(rob0,block1,s2)).
agent_action(put_down(rob0,block0,s0)).
agent_action(travel(rob0,a3)).
agent_action(travel(rob0,s0)).
agent_action(put_down(rob0,block3,s2)).
agent_action(travel(rob0,b1)).
agent_action(travel(rob0,d1)).
agent_action(travel(rob0,a5)).
agent_action(put_down(rob0,tab0,s0)).
agent_action(put_down(rob0,block1,s4)).
agent_action(put_down(rob0,block0,s2)).
agent_action(travel(rob0,f1)).
agent_action(put_down(rob0,block0,s3)).
agent_action(put_down(rob0,block3,s0)).
agent_action(travel(rob0,r1)).
agent_action(put_down(rob0,block2,s3)).
agent_action(pick_up(rob0,block0)).
agent_action(travel(rob0,s3)).
